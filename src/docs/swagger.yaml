definitions:
  models.RequestBodyForAirline:
    properties:
      callsign:
        default: SampleCallsign
        type: string
      country:
        default: SampleCountry
        type: string
      iata:
        default: SMP
        type: string
      icao:
        default: SMPL
        type: string
      name:
        default: SampleName
        type: string
    required:
    - country
    - icao
    - name
    type: object
  models.RequestBodyForAirport:
    properties:
      airportname:
        example: SampleAirport
        type: string
      city:
        example: SampleCity
        type: string
      country:
        example: United Kingdom
        type: string
      faa:
        example: SAA
        type: string
      geo:
        properties:
          alt:
            type: number
          lat:
            type: number
          lon:
            type: number
        type: object
      icao:
        example: SAAA
        type: string
      tz:
        example: Europe/Paris
        type: string
    required:
    - airportname
    - city
    - country
    - faa
    type: object
  models.RequestBodyForRoute:
    properties:
      airline:
        type: string
      airlineid:
        type: string
      destinationairport:
        type: string
      distance:
        type: number
      equipment:
        type: string
      schedule:
        items:
          properties:
            day:
              type: integer
            flight:
              type: string
            utc:
              type: string
          type: object
        type: array
      sourceairport:
        type: string
      stops:
        type: integer
    type: object
  responses.TravelSampleResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
  responses.TravelSampleResponseForAirline:
    properties:
      data:
        $ref: '#/definitions/models.RequestBodyForAirline'
      message:
        example: Success
        type: string
      status:
        example: 200
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Couchbase Golang Quickstart using Gin Gonic. This API provides operations
    for multiple collections in the database, including CRUD operations and query
    examples.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Golang Quickstart using Gin Gonic
  version: "1.0"
paths:
  /api/v1/airline/{id}:
    delete:
      description: Deletes a document in the "airline" collection based on the provided
        key.
      parameters:
      - description: 'Deletes a document with the specified key. Example: ''sample_id'''
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/responses.TravelSampleResponse'
        "404":
          description: Airline Document ID Not Found
        "500":
          description: Internal Server Error
      summary: Delete Document
      tags:
      - Airline collection
    get:
      description: Gets a document from the "airline" collection based on the provided
        key.
      parameters:
      - description: 'Get document by ID.    Example: ''airline_123'''
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TravelSampleResponse'
        "404":
          description: Airline Document ID not found
        "500":
          description: Internal Server Error
      summary: Get Airline Document
      tags:
      - Airline collection
    post:
      description: Inserts a document into the "airline" collection.
      parameters:
      - description: 'Create document by specifying ID.    Example: airline_123'
        in: path
        name: id
        required: true
        type: string
      - description: Data to create a new document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBodyForAirline'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.TravelSampleResponseForAirline'
        "400":
          description: Bad Request
        "409":
          description: Airline document already exists
        "500":
          description: Internal Server Error
      summary: Insert Document
      tags:
      - Airline collection
    put:
      description: Updates a document in the "airline" collection based on the provided
        key.
      parameters:
      - description: 'Update document by ID.    Example: ''airline_123'''
        in: path
        name: id
        required: true
        type: string
      - description: Updates document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBodyForAirline'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update Document
      tags:
      - Airline collection
  /api/v1/airline/list:
    get:
      description: Get a list of airlines filtered by country
      parameters:
      - description: 'Filter by country. Example: ''France'''
        in: query
        name: country
        required: true
        type: string
      - description: 'Number of airlines to return (page size). Example: 10'
        in: query
        name: limit
        type: integer
      - description: 'Number of airlines to skip (for pagination). Example: 0'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TravelSampleResponse'
        "500":
          description: Internal Server Error
      summary: Get Airlines by Country
      tags:
      - Airline collection
  /api/v1/airline/to-airport:
    get:
      description: Get a list of airlines flying to a specific airport
      parameters:
      - description: 'Destination airport. Example: ''JFK'''
        in: query
        name: airport
        required: true
        type: string
      - description: 'Number of airlines to return (page size). Example: 10'
        in: query
        name: limit
        type: integer
      - description: 'Number of airlines to skip (for pagination). Example: 0'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TravelSampleResponse'
        "500":
          description: Internal Server Error
      summary: Get Airlines Flying to Airport
      tags:
      - Airline collection
  /api/v1/airport/{id}:
    delete:
      description: Delete Airport with specified ID
      parameters:
      - description: 'Deletes a document with key specified      Example: airport_1273'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "404":
          description: Airport Document ID Not Found
        "500":
          description: Internal Server Error
      summary: Deletes Airport Document
      tags:
      - Airport collection
    get:
      description: Get Airport with specified ID
      parameters:
      - description: 'Search document by ID    Example: airport_1273'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TravelSampleResponse'
        "404":
          description: Airport Document ID Not Found
        "500":
          description: Internal Server Error
      summary: Get Airport Document
      tags:
      - Airport collection
    post:
      description: Create Airport with specified ID
      parameters:
      - description: 'Create document by specifying ID      Example: airport_1273'
        in: path
        name: id
        required: true
        type: string
      - description: Data to create a document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBodyForAirport'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.TravelSampleResponse'
        "400":
          description: Bad Request
        "409":
          description: Airport Document already exists
        "500":
          description: Internal Server Error
      summary: Insert Airport Document
      tags:
      - Airport collection
    put:
      description: Update Airport with specified ID
      parameters:
      - description: 'Update document by id         Example: airport_1273'
        in: path
        name: id
        required: true
        type: string
      - description: Updates document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBodyForAirport'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update Airport Document
      tags:
      - Airport collection
  /api/v1/airport/direct-connections:
    get:
      description: Get Direct Connections from specified Airport
      parameters:
      - description: 'Source airport       Example: SFO, LHR, CDG'
        in: query
        name: airport
        required: true
        type: string
      - description: 'Number of direct connections to return (page size)      Default
          value : 10'
        in: query
        name: limit
        type: integer
      - description: 'Number of direct connections to skip (for pagination)  Default
          value : 0'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "500":
          description: Internal Server Error
      summary: Get Direct Connections from Airport
      tags:
      - Airport collection
  /api/v1/airport/list:
    get:
      description: Get list of Airports. Optionally, you can filter the list by Country
      parameters:
      - description: 'Country     Example: United Kingdom, France, United States'
        in: query
        name: country
        required: true
        type: string
      - description: 'Number of airports to return (page size)     Default value :
          10'
        in: query
        name: limit
        type: integer
      - description: 'Number of airports to skip (for pagination)     Default value
          : 0'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "500":
          description: Internal Server Error
      summary: List Airport Document
      tags:
      - Airport collection
  /api/v1/route/{id}:
    delete:
      description: Deletes a document in the "route" collection based on the provided
        key.
      parameters:
      - description: Deletes a document with key specified
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "404":
          description: Route Document ID Not Found
        "500":
          description: Internal Server Error
      summary: Deletes Document
      tags:
      - Route collection
    get:
      description: Gets a document from the "route" collection based on the provided
        key.
      parameters:
      - description: search document by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "404":
          description: Route Document ID Not Found
        "500":
          description: Internal Server Error
      summary: Get Document
      tags:
      - Route collection
    post:
      description: Inserts a document to the "route" collection.
      parameters:
      - description: Create document by specifying ID
        in: path
        name: id
        required: true
        type: string
      - description: Data to create a document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBodyForRoute'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.TravelSampleResponse'
        "400":
          description: Bad Request
        "409":
          description: Route Document already exists
        "500":
          description: Internal Server Error
      summary: Insert Document
      tags:
      - Route collection
    put:
      description: Updates a document in the "route" collection based on the provided
        key.
      parameters:
      - description: Update document by id
        in: path
        name: id
        required: true
        type: string
      - description: Updates document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBodyForRoute'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TravelSampleResponse'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update Document
      tags:
      - Route collection
swagger: "2.0"
