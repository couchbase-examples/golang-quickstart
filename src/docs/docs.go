// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/airline/{id}": {
            "get": {
                "description": "Gets a document from the \"airline\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airline collection"
                ],
                "summary": "Get Airline Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search document by ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.TravelSampleResponse"
                        }
                    },
                    "404": {
                        "description": "Airline Document ID not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Updates a document in the \"airline\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airline collection"
                ],
                "summary": "Update Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update document by ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestBodyForAirline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TravelSampleResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Inserts a document into the \"airline\" collection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airline collection"
                ],
                "summary": "Insert Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Create document by specifying ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data to create a new document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestBodyForAirline"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.TravelSampleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Airline document already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Deletes a document in the \"airline\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airline collection"
                ],
                "summary": "Delete Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deletes a document with the specified key",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/responses.TravelSampleResponse"
                        }
                    },
                    "404": {
                        "description": "Airline Document ID Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/airport/{id}": {
            "get": {
                "description": "Gets a document from the \"airport\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airport collection"
                ],
                "summary": "Get Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search document by ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.TravelSampleResponse"
                        }
                    },
                    "404": {
                        "description": "Airport Document ID Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Updates a document in the \"airport\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airport collection"
                ],
                "summary": "Update Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update document by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestBodyForAirport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TravelSampleResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Inserts a document to the \"airport\" collection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airport collection"
                ],
                "summary": "Insert Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Create document by specifying ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data to create a document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestBodyForAirport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.TravelSampleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Airport Document already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Deletes a document in the \"airport\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airport collection"
                ],
                "summary": "Deletes Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deletes a document with key specified",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TravelSampleResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Airport Document ID Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "Checks if service is running",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Check Controller"
                ],
                "summary": "Checks for service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/api/v1/route/{id}": {
            "get": {
                "description": "Gets a document from the \"route\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route collection"
                ],
                "summary": "Get Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search document by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TravelSampleResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Route Document ID Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Updates a document in the \"route\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route collection"
                ],
                "summary": "Update Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update document by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestBodyForRoute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TravelSampleResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Inserts a document to the \"route\" collection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route collection"
                ],
                "summary": "Insert Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Create document by specifying ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data to create a document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestBodyForRoute"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.TravelSampleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Route Document already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Deletes a document in the \"route\" collection based on the provided key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route collection"
                ],
                "summary": "Deletes Document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deletes a document with key specified",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TravelSampleResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Route Document ID Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.RequestBodyForAirline": {
            "type": "object",
            "required": [
                "country",
                "icao",
                "name"
            ],
            "properties": {
                "callsign": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "iata": {
                    "type": "string"
                },
                "icao": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.RequestBodyForAirport": {
            "type": "object",
            "properties": {
                "airportname": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "faa": {
                    "type": "string"
                },
                "geo": {
                    "type": "object",
                    "properties": {
                        "alt": {
                            "type": "number"
                        },
                        "lat": {
                            "type": "number"
                        },
                        "lon": {
                            "type": "number"
                        }
                    }
                },
                "icao": {
                    "type": "string"
                },
                "tz": {
                    "type": "string"
                }
            }
        },
        "models.RequestBodyForRoute": {
            "type": "object",
            "properties": {
                "airline": {
                    "type": "string"
                },
                "airlineid": {
                    "type": "string"
                },
                "destinationairport": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "equipment": {
                    "type": "string"
                },
                "schedule": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "day": {
                                "type": "integer"
                            },
                            "flight": {
                                "type": "string"
                            },
                            "utc": {
                                "type": "string"
                            }
                        }
                    }
                },
                "sourceairport": {
                    "type": "string"
                },
                "stops": {
                    "type": "integer"
                }
            }
        },
        "responses.TravelSampleResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Go Profile API",
	Description:      "Couchbase Golang Quickstart using Gin Gonic. This API provides CRUD operations for three collections in the database.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
