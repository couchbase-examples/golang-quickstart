basePath: /
definitions:
  models.RequestBody:
    properties:
      Email:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      Pid:
        type: string
      password:
        type: string
    type: object
  responses.ProfileResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Couchbase Golang Quickstart using Gin Gonic
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Go Profile API
  version: "1.0"
paths:
  /api/v1/health:
    get:
      description: Checks if service is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Checks for service
      tags:
      - Health Check Controller
  /api/v1/profile:
    post:
      description: Creates the Document with key
      parameters:
      - description: Creates a document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ProfileResponse'
            type: array
        "403":
          description: Forbidden
        "404":
          description: Page Not found
        "500":
          description: Error while getting examples
      summary: Create Document
      tags:
      - Profile Controller
  /api/v1/profile/{id}:
    delete:
      description: Deletes the Document with key
      parameters:
      - description: Deletes a document with key specified
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ProfileResponse'
            type: array
        "403":
          description: Forbidden
        "404":
          description: Page Not found
        "500":
          description: Error while getting examples
      summary: Deletes Document
      tags:
      - Profile Controller
    get:
      description: Gets the Document with key
      parameters:
      - description: search document by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ProfileResponse'
            type: array
        "403":
          description: Forbidden
        "404":
          description: Page Not found
        "500":
          description: Error while getting examples
      summary: Get Document
      tags:
      - Profile Controller
    put:
      description: Updates the Document with key
      parameters:
      - description: Update document by id
        in: path
        name: id
        required: true
        type: string
      - description: Creates a document
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ProfileResponse'
            type: array
        "403":
          description: Forbidden
        "404":
          description: Page Not found
        "500":
          description: Error while getting examples
      summary: Update Document
      tags:
      - Profile Controller
swagger: "2.0"
